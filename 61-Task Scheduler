Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.

However, there is a non-negative integer n that represents the cooldown period between two same tasks (the same letter in the array), that is that there must be at least n units of time between any two same tasks.

Return the least number of units of times that the CPU will take to finish all the given tasks.

class Solution:
    def leastInterval(self, tasks: List[str], n: int) -> int:
        hashmap=Counter(tasks)                       "this will give us a hash map of counts of characters in the tasks"
        maxheap=[-i for i in hashmap.values()]       "we convert every value to negative because python doesn't have a maxheap so we have to make minheap of neg values"
        heapq.heapify(maxheap)                       "conversion to heap"
        q=deque()                                    "we create a queue to store counts and time each character can be visited next depending on the idle value"
        time=0
        
        while q or maxheap:                              "continue until at least one of q or maxheap are nonempty"
            time+=1
            if maxheap:                                  
                count=1+heapq.heappop(maxheap)           "we increment count by 1 because it is negative-we visited this character and calculate the remaning number of times it should be visited"
                if count:             
                    q.append([count,time+n])             "if the count is not 0 we add it to q and have the next time that it can be visited to time+n where n is the idle or distance between repeating characters"
            if q and time==q[0][1]:                      "if the time equals to the first value in q qw can visit that character and add it to heap"
                heapq.heappush(maxheap,q.popleft()[0])
        return time
