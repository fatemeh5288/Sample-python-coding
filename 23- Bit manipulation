Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        res=0
        for i in nums:       "we through elements in nums and each time perform XOR operator"
            res=res^i        "this operator will yield 0 if two elements are same and n for n^0"
        return res           "the final result will be the one that did not have duplicate in the list, if it had duplicate it would have been canceled out"
