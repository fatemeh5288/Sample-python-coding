#Given the roots of two binary trees p and q, write a function to check if they are the same or not.
#Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        if not p and not q:                                                          "if both trees are null returns True"
            return True
        if p.val==q.val:                                                               "first checks the root, if they are equal it checks the children"
            if self.isSameTree(p.left,q.left) and self.isSameTree(p.right,q.right):     "recursive function to check left and right nodes"
                return True                                                           "if all are equal returns True"
        return False                                                                  "if none of the conditions above are met returns False"
